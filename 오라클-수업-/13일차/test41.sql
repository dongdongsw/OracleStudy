-- 정규화 연습
/*
	주문(주문번호, 고객명, 주소, 상품ID, 상품명, 단가, 수량) : 비정규화 테이블
		요구사항
			=> 주문 한개에는 여러 상품을 포함 할 수 있다
			   ---------------------------
					한 컬럼에 여러개의 상품을 동시에 저장해야 한다.
						ㄴ 1 정규화
			=> 고객은 주문시 고객명, 주소를 제공
					=> 
			주문번호 => 고객명, 주소
			상품 ID => 상품명, 단가
			(주문번호, 상품ID) => 수량
			
			정규화
				1 정규화 : 원자값 문제 발생 가능성
				2 정규화 : 부분 종속 제거 => 고객명 / 주소 => 주문번호 분해
				3 정규화 : 없다
			주문(주문번호, 고객명, 주소)
			상품(상품ID, 상품명, 단가)
			구매(주문번호, 상품ID, 수량)
			---------------------------------------------------------
			비정규화 테이블
			찜(찜ID, 회원ID, 상품ID, 찜한날짜)
			
			상품(상품ID, 상품명, 가격)
			
			회원(회원ID, 회원이름, 전화)
			
			
			제약조건
				기본키 : PRIMARY KEY => NOT NULL + UNIQUE
						=> 중복없는 데이터 저장(이상현상 방지)
						=> 권장: 모든 테이블은 기본키가 존재해야 된다
						=> ID를 제외 / 나머지는 숫자로 표현
										--------------------
										| 자동 증가 번호(SEQUENCE)
				외래키(참조키) : FOREIGN KEY
								=> 반드시 참조하고 있는 테이블의 PRIMARY KEY 가 존재
								=> 참조한 컬럼의 값만 사용이 가능
								=> 참조테이블 먼저 생성 = 본인의 테이블 생성
								=> 삭제는 반대로
				CHECK : 지정된 값만 사요어(장르, 음식종류, 부서명, 근무지..)
				
				UNIQUE: 후보키(대체키) => 기본키를 모르는 경우
						=> 단점 : 중복 허용하지 않는다 => null 값을  허용한다
						
				NOT NULL : 데이터 값이 반드시 존재
				
			키의 종류
				기본키 : 고유 식별자 (ROW 한개에 대한) => id,no...
						NULL 값을 허용하지 않는다, 중복 허용(x)
						= 모든 테이블에서 한개 이상 사용을 권장
						 Primary Key
						 
				후보키 : 기본키가 될 수 있는 컬럼 => 아이디를 모르는 경우에 대신 사용 phone / email
				
				대체키 : 후보키 중에 기본키로 선택되지 않는 키: 주민번호 => 이메일(x)
				
				복합키 : 두개 이상의 컬럼을 조합 사용 (학번, 과목코드)
				
				외래키 : 참조키 => 다른 테이블 연동
						FOREIGN KEY
						
				슈퍼키 : 후보키 + 다른 컬럼을 포함할 수 있는 키(거의 사용이 안된다)
				
				유니크키 : 중복 허용 x  , null값  허용 
						=> 이메일 / 전화번호
				후보키는 UNIQUE / 기본키 : PRIMARY KEY / 외래키 : FOREIGN KEY
			
*/